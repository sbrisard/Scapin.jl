var documenterSearchIndex = {"docs":
[{"location":"theory/bibliography/#Bibliography","page":"Bibliography","title":"Bibliography","text":"","category":"section"},{"location":"theory/bibliography/#bris2017","page":"Bibliography","title":"Brisard, S. (2017)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"Reconstructing displacements from the solution to the periodic Lippmann–Schwinger equation discretized on a uniform grid. International Journal for Numerical Methods in Engineering, 109(4), 459–486. DOI:10.1002/nme.5263","category":"page"},{"location":"theory/bibliography/#bris2010a","page":"Bibliography","title":"Brisard, S., & Dormieux, L. (2010)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"FFT-based methods for the mechanics of composites: A general variational framework. Computational Materials Science, 49(3), 663–671. DOI:10.1016/j.commatsci.2010.06.009","category":"page"},{"location":"theory/bibliography/#bris2012a","page":"Bibliography","title":"Brisard, S., & Dormieux, L. (2012)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"Combining Galerkin approximation techniques with the principle of Hashin and Shtrikman to derive a new FFT-based numerical method for the homogenization of composites. Computer Methods in Applied Mechanics and Engineering, 217–220, 197–212. DOI:10.1016/j.cma.2012.01.003","category":"page"},{"location":"theory/bibliography/#moul1994","page":"Bibliography","title":"Moulinec, H., & Suquet, P. (1994)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"A fast numerical method for computing the linear and nonlinear mechanical properties of composites. Comptes Rendus de l’Académie Des Sciences. Série II, Mécanique, Physique, Chimie, Astronomie, 318(11), 1417–1423.","category":"page"},{"location":"theory/bibliography/#moul1998","page":"Bibliography","title":"Moulinec, H., & Suquet, P. (1998)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"A numerical method for computing the overall response of nonlinear composites with complex microstructure. Computer Methods in Applied Mechanics and Engineering, 157(1–2), 69–94. DOI:10.1016/S0045-7825(97)00218-1","category":"page"},{"location":"theory/bibliography/#suqu1990","page":"Bibliography","title":"Suquet, P. (1990)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"A simplified method for the prediction of homogenized elastic properties of composites with a periodic structure. Comptes-Rendus de l’Académie Des Sciences Série II, 311(7), 769–774.","category":"page"},{"location":"theory/bibliography/#wich2020","page":"Bibliography","title":"Wicht, D., Schneider, M., & Böhlke, T. (2020)","text":"","category":"section"},{"location":"theory/bibliography/","page":"Bibliography","title":"Bibliography","text":"On Quasi-Newton methods in fast Fourier transform-based micromechanics. International Journal for Numerical Methods in Engineering, 121(8), 1665–1694. DOI:10.1002/nme.6283","category":"page"},{"location":"api/","page":"Library","title":"Library","text":"Modules = [Scapin]","category":"page"},{"location":"api/#Scapin.Hooke","page":"Library","title":"Scapin.Hooke","text":"Isotropic, linear elastic material.\n\nHooke{T, DIM}(μ::T, ν::T)\n\nCreate a new instance with shear modulus μ and Poisson ratio ν.\n\nnote: Material stability\nMaterial stability requires that μ > 0 and -1 < ν < 1/2; these conditions are not enforced here. In other words, unstable materials can be defined.\n\ntip: Plane stresses vs. plane strains\nIn the current implementation, DIM = 2 refers to plane strain elasticity. For plane stresses, the true Poisson ratio ν should be replaced with the fictitious ratio ν̃ = ν / (1 + ν).\n\n\n\n\n\n","category":"type"},{"location":"api/#Scapin.avg_gradient_operator-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T<:Number","page":"Library","title":"Scapin.avg_gradient_operator","text":"avg_gradient_operator(h)\n\nReturn the cell average of the gradient operator.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.avg_strain_displacement_operator-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T<:Number","page":"Library","title":"Scapin.avg_strain_displacement_operator","text":"avg_strain_displacement_operator(h)\n\nReturn the cell average of the strain-displacement operator.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.bulk_modulus-Tuple{Hooke}","page":"Library","title":"Scapin.bulk_modulus","text":"bulk_modulus(C::Hooke)\n\nReturn the bulk modulus κ for the specified Hooke material.\n\nFor plane strain elasticity\n\nκ = μ / (1 - 2ν),\n\nand, for 3D elasticity\n\nκ = 2/3 μ (1 + ν) / (1 - 2ν).\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.element_nodes-Tuple{Any, AbstractVector{Int64}}","page":"Library","title":"Scapin.element_nodes","text":"element_nodes(e, N)\n\nReturn the nodes of element e within the grid of size N.\n\nThe element is specified as a d-dimensional multi-index, e. The function returns an array of 2^d multi-indices. The size of the grid is specified by the array N (size(N, 1) = d).\n\nNote that periodic boundary conditions are accounted for.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.element_nodes-Tuple{Int64}","page":"Library","title":"Scapin.element_nodes","text":"element_nodes(d)\n\nReturn the multi-indices of the d-dimensional brick element.\n\nThis function returns an object 𝔑 of type CartesianIndices. An element n ∈ 𝔑 represents the node with coordinates (x[1], …, x[d])\n\nx[i] = (-1)^n[i] * h[i] / 2,    i = 1, …, d\n\nSee “Geometry of the reference brick element” in the docs.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.global_stiffness_operator-Union{Tuple{T}, Tuple{AbstractVector{Int64}, AbstractVector{T}, T, T}} where T<:Number","page":"Library","title":"Scapin.global_stiffness_operator","text":"global_stiffness_matrix(N, h, μ, ν)\n\nReturn the global stiffness matrix for periodic, homogeneous elasticity.\n\nN: grid size\nh: cell size\nμ: shear modulus\nν: Poisson ratio\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.gradient_operator-Union{Tuple{T}, Tuple{AbstractVector{T}, AbstractVector{T}}} where T<:Number","page":"Library","title":"Scapin.gradient_operator","text":"gradient_operator(x, h)\n\nReturn the gradient operator at the specified point.\n\nThis function returns a (d+1) dimensional array D of size (d, 2, 2, …). If n is the multi-index of the node, and i is the index of a component, then D[i, n] is the partial derivative of N[n] w.r.t. x[i], evaluated at x.\n\nh is the size of the brick element.\n\nSee “Geometry of the reference brick element”.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.integrate-Union{Tuple{T}, Tuple{Any, AbstractVector{T}}} where T<:Number","page":"Library","title":"Scapin.integrate","text":"integrate(f, h)\n\nReturn the N-dimensional integral of f over (0, h[1]) × (0, h[2]) × … × (0, h[N]).\n\nUses 2-point Gauss-Legendre integration (tensorized over the N dimensions). f must take a 1-dimensional array of size N as unique input. If avg is true, the function returns the N-dimensional average.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.modal_stiffness!-NTuple{5, Any}","page":"Library","title":"Scapin.modal_stiffness!","text":"modal_stiffness!(K, k, N, h, C)\n\nCompute the modal stiffness matrix K in place, for the spatial frequency k. The grid is defined by its size, N and spacing, h; C is the material.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.modal_stiffness-NTuple{4, Any}","page":"Library","title":"Scapin.modal_stiffness","text":"modal_stiffness!(K, k, N, h, C)\n\nCompute the modal stiffness matrix K, for the spatial frequency k. The grid is defined by its size, N and spacing, h; C is the material.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.modal_strain_displacement!-NTuple{4, Any}","page":"Library","title":"Scapin.modal_strain_displacement!","text":"modal_strain_displacement!(B, k, N, h)\n\nCompute the modal strain-displacement vector B in place, for the spatial frequency k. The grid is defined by its size, N and spacing, h.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.modal_strain_displacement-Tuple{Any, Any, Any}","page":"Library","title":"Scapin.modal_strain_displacement","text":"modal_strain_displacement(k, N, h)\n\nCompute the modal strain-displacement vector B for the spatial frequency k. The grid is defined by its size, N and spacing, h.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.shape-Union{Tuple{T}, Tuple{AbstractVector{T}, AbstractVector{T}}} where T<:Number","page":"Library","title":"Scapin.shape","text":"shape(x, h)\n\nReturn the value of the shape functions of the element, at the specified point.\n\nThis function returns a d-dimensional array N, such that N[n] is the shape function associated with node n, evaluated at x. In particular, N[n] evaluated at node m is δ[m, n] (Kronecker).\n\nSee “Shape functions” in the docs.\n\n\n\n\n\n","category":"method"},{"location":"api/#Scapin.strain_displacement_operator-Union{Tuple{T}, Tuple{AbstractVector{T}, AbstractVector{T}}} where T<:Number","page":"Library","title":"Scapin.strain_displacement_operator","text":"strain_displacement_operator(x, h)\n\nReturn the strain-displacement operator for the d-dimensional brick element of size h, evaluated at point x.\n\nThis function returns a (d+3) dimensional array B of size (d, d, 2, …, 2, d). If n is the multi-index of the node, and i, j, k are component indices then, the interpolated (i, j) component of the strain at x reads\n\nε[i, j] = Σₙ Σₖ B[i, j, n, k] * u[n, k].\n\nSee “Gradient and strain-displacement operators”.\n\n\n\n\n\n","category":"method"},{"location":"theory/brick_element/#_20210914055642","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"","category":"section"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"In this chapter, we formulate the linear brick finite element for conductivity and linear elasticity in d dimensions (din2 3).","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"note: Note\nIn the remainder of this chapter, i, j, h and k denote scalar indices that refer to tensor components, and span 1 2 cdots d; tuplem, tuplen are d-dimensional multi-indices that refer to nodes. Depending on the context (local, element operators or global, assembled operators) they span 1 2^d or the whole grid cellindices. We adopt Einstein's convention for indices of both types.","category":"page"},{"location":"theory/brick_element/#_20210910120306","page":"On the d-dimensional brick element","title":"Geometry of the reference brick element","text":"","category":"section"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"The reference element being centered at the origin, it occupies the following domain","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"Omega^element=biggl(-frach_12 frach_12biggr)timescdots\ntimesbiggl(-frach_d2 frach_d2biggr)","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"where h_i is the size of the element along axis i (i=1 dots d). The nodes of the element are indexed by tuplenin1 2^d, such that the coordinates of node tuplen read","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"x_tupleni=(-1)^n_ifrach_i2","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"For integration purposes, it is useful to introduce the reduced coordinates xi_i=2x_ih_i","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"int_Omega^elementf(x_1 ldots x_d)D x_1cdotsD x_d\n=frach_1cdots h_d2^dint_(-1 1)^df(h_1xi_12 ldots h_dxi_d2)\nDxi_1cdotsDxi_d","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"and it is observed that the reduced coordinates of the node tuplen are xi_i=(-1)^n_i.","category":"page"},{"location":"theory/brick_element/#_20210910114136","page":"On the d-dimensional brick element","title":"Shape functions","text":"","category":"section"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"The shape function associated with node tuplen is N^element_tuplen(vec x), wich is defined below as a function of the reduced coordinates of the observation point","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"N^element_tuplen(vec x)=frac12^dprod_i=1^dbigl1+(-1)^n_ixi_ibigr","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"and we have as expected N^element_tuplem(vec x_tuple n) = delta_tuplemtuplen. The nodal values of f being f_tuplen, we have the interpolation formula: f(vec x)=N^element_tuplen(vec x)f_tuplen.","category":"page"},{"location":"theory/brick_element/#_20210910114926","page":"On the d-dimensional brick element","title":"Gradient and strain-displacement operators","text":"","category":"section"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"We consider a scalar interpolated field, f(vec x)=N^element_tuplen(vec x)f_tuplen. The components of its gradient are given by the following expression","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"bigl(fotimesnablabigr)_i=partial_i f=D_ituplen^element f_tuplen","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"where the observation point vec x has been dropped, and D_ituplen^element denotes the element gradient operator","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"D_ituplen^element=partial_iN_tuplen\n=frac(-1)^n_i2^d-1h_i\nprod_jneq ibigl1+(-1)^n_jxi_jbigr","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"It will be useful to introduce the element average of this operator, overlineD_ituplen^element","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"overlineD_ituplen^element=frac 1h_1cdots h_d\nint_Omega^elementD^element_ituplen(vec x)D x_1cdotsD x_d","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"and, observing that each factor in square brackets in the above expression of D^element_ituplen varies linearly between 0 et 2 (and therefore averages to 1), we find","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"overlineD^element_ituplen=frac(-1)^n_i2^d-1h_i","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"We now consider the interpolated displacement field, vec u = N^element_tuplen vec u_tuplen. The components of the associated strain, tensvarepsilon=vec usymotimesnabla are","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"varepsilon_ij=tfrac12bigl(partial_iu_j+partial_ju_ibigr)\n=tfrac12bigl(D^element_ituplenu_tuplenj\n+D^element_jtuplenu_tuplenibigr)","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"where u_tupleni denotes the i-th component of the nodal value of vec u at node tuplen, u_tupleni=vec u(vec x_tuplen)cdotvec e_i. Rearranging the above expression, we find varepsilon_ij=B^element_ijtuplenku_tuplenk^element, where","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"B_ijtuplenk^element\n=tfrac12bigl(D^element_ituplendelta_jk\n+D^element_jtuplendelta_ikbigr)","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"is the element strain-displacement operator, with volume average","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"overlineB_ijtuplenk^element\n=tfrac12bigl(overlineD^element_ituplendelta_jk\n+overlineD^element_jtuplendelta_ikbigr)\n=frac12^dBiglfrac(-1)^n_idelta_jkh_i\n+frac(-1)^n_jdelta_ikh_jBigr","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"It is obverved that the trace of the strain tensor is given by the following expression","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"varepsilon_ii=D_ituplenu_tupleni^element","category":"page"},{"location":"theory/brick_element/#Element-stiffness-operator","page":"On the d-dimensional brick element","title":"Element stiffness operator","text":"","category":"section"},{"location":"theory/brick_element/#Conductivity","page":"On the d-dimensional brick element","title":"Conductivity","text":"","category":"section"},{"location":"theory/brick_element/#Linear-elasticity","page":"On the d-dimensional brick element","title":"Linear elasticity","text":"","category":"section"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"Assuming the material to be linearly elastic, with Lamé coefficients lambda and mu, we have the following expression of the interpolated stresses as a function of the nodal displacements u_tuplemi","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"sigma_hk=bigl(lambda D^element_ituplemdelta_hk\n+2mu B^element_hktuplemibigr)u_tuplemi","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"and the volume density of elastic energy reads","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"tfrac12sigma_hkvarepsilon_hk\n=bigl(lambda D^element_ituplemdelta_hk\n+2mu B^element_hktuplemibigr)B_hktuplenj^element\nu_tuplemiu_tuplenj","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"Upon expansion and integration, we get the expression of the elastic energy within the element","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"U^element\n=int_Omega^elementtfrac12sigma_hkvarepsilon_hkD x_1cdotsD x_d\n=tfrac12K^element_tuplemituplenju_tuplemiu_tuplenj","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"where the element stiffness operator reads","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"K^element_tuplemituplenj\n=lambdaK^element lambda_tuplemituplenj\n+muK^element mu_tuplemituplenj","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"with","category":"page"},{"location":"theory/brick_element/","page":"On the d-dimensional brick element","title":"On the d-dimensional brick element","text":"K^element lambda_tuplemituplenj\n=int_Omega^elementD^element_ituplemD^element_jtuplen\nquadtextandquad\nK^element mu_tuplemituplenj\n=int_Omega^element 2 B^element_hktuplemiB^element_hktuplenj","category":"page"},{"location":"theory/continuous_green_operators/#_20210911035306","page":"Continuous Green operators","title":"Continuous Green operators","text":"","category":"section"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"In this chapter, we discuss various boundary-value problems in a periodic setting. For each of these problems, we introduce the associated Green operator.","category":"page"},{"location":"theory/continuous_green_operators/#Conductivity","page":"Continuous Green operators","title":"Conductivity","text":"","category":"section"},{"location":"theory/continuous_green_operators/#id20210914104336","page":"Continuous Green operators","title":"Elasticity","text":"","category":"section"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"We first define a few functional spaces; tensors_2(Omega) denotes the space of second-order, symmetric, tensor fields, with square-integrable components. Then, the space stresses(Omega) of periodic, self-equilibrated stresses is defined as follows","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tenssigmainstresses(Omega)iffleft\nbegingathered\ntenssigmaintensors_2(Omega)\ntenssigmacdotnabla=vec 0text ae in Omega\ntenssigmacdotvec e_itext is L_ivec e_i\ntext-periodic for all i=1 2 ldots dtext (no summation)\nendgathered\nright","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where the last condition expresses the periodicity of tractions in all directions parallel to the sides of the unit-cell. The space tensstrains(Omega) of periodic, geometrically compatible strains is defined as follows","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tensvarepsiloninstrains(Omega)iffleft\nbegingathered\ntensvarepsilonintensors_2(Omega)\ntensvarepsilon=vec usymotimesnabla\ntext ae in Omegatext for some vector field vec u\nvec utext has square-integrable components\nvec utext is Omegatext-periodic\nendgathered\nright","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Finally, we define the spaces of stresses and strains with zero average","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"stresses_0(Omega)=bigltenssigmainstresses(Omega)\nlangletenssigmarangle=tens0bigr\nquadtextandquad\nstrains_0(Omega)=tensvarepsiloninstrains(Omega)\nlangletensvarepsilonrangle=tens0bigr","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"We are now ready to define the periodic, fourth-order Green operator for strains tensGamma. Let tens C be the homogeneous elastic stiffness of the body Omega[1]. Let tenstauintensors_2(Omega) be a prescribed tensor field (stress-polarization). We want to find the equilibrium state of the body Omega, subjected to the eigenstress tenstau and periodic boundary conditions. In other words, we want to find the solution to the following problem","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"textFind tenssigmainstresses_0(Omega)\ntext and tensvarepsiloninstrains_0(Omega)\ntext such that tenssigma=tens Cdbldottensvarepsilon+tenstau\ntext ae in Omega","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"[1]: In other words, tens C is a constant, fourth-order tensor with major   and minor symmetries; furthermore, tens C is positive definite.","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Owing to the periodic boundary conditions, we use Fourier series expansions of tenstau, tenssigma, tensvarepsilon and vec u","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginBmatrix\ntenstau(vec x)\ntenssigma(vec x)\ntensvarepsilon(vec x)\nvec u(vec x)\nendBmatrix\n=sum_tupleninintegers^d\nbeginBmatrix\ntildetenstau_tuplen\ntildetenssigma_tuplen\ntildetensvarepsilon_tuplen\ntildevec u_tuplen\nendBmatrix\nexp(I vec k_tuplencdotvec x)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The Fourier modes tildetenssigma_tuplen, tildetensvarepsilon_tuplen and tildevec u_tuplen solve the following equations (respectively: equilibrium, geometric compatibility, constitutive relation)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"begingathered\ntildetenssigma_tuplencdotvec k_tuplen=vec 0\ntildetensvarepsilon_tuplen\n=fracI2bigl(tildevec u_tuplenotimesvec k_tuplen\n+vec k_tuplenotimestildevec u_tuplenbigr)\ntildetenssigma_tuplen=tens Cdbldottildetensvarepsilon_tuplen\n+tildetenstau_tuplen\nendgathered","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Plugging the third equation into the second equation, and recalling that tens C has the minor symmetries, we find the following expression of tildetenssigma","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tildetenssigma_tuplen\n=Ibigl(tens Ccdotvec k_tuplenbigr)cdottildevec u_tuplen\n+tildetenstau_tuplen","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The Cauchy stress tensor being symmetric, the first of the above equations also reads vec k_tuplencdottildetenssigma_tuplen=vec 0 and","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tildevec u_tuplen\n=Ibigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\ncdottildetenstau_tuplencdotvec k_tuplen","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"which delivers the following expression for the Fourier modes of the strain field","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tildetensvarepsilon_tuplen\n=-tfrac12biglbigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\ncdottildetenstau_tuplencdotvec k_tuplenbigrotimesvec k_tuplen\n-tfrac12vec k_tuplen\notimesbiglbigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\ncdottildetenstau_tuplencdotvec k_tuplenbigr","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The above relation defines a linear mapping between tildetenstau_tuplen and tildetensvarepsilon_tuplen. For each Fourier mode tuplen, we therefore introduce the fourth-order tensor tildetensGamma_tuplen with major and minor symmetries, such that tildetensvarepsilon_tuplen=-tildetensGamma_tuplendbldottildetenstau_tuplen. Our analysis shows that tildetensGamma_tuplen=hattensGamma(vec k_tuplen) where, for arbitrary wave-vector vec k, hattensGamma(vec k) is a fourth-order tensor with major and minor symmetries, such that","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"hattensGamma(vec k)dbldottildetenstau\n=tfrac12biglbigl(vec ncdottens Ccdotvec nbigr)^-1\ncdottildetenstaucdotvec nbigrotimesvec n\n+tfrac12vec notimesbiglbigl(vec ncdottens Ccdotvec nbigr)^-1\ncdottildetenstaucdotvec nbigr","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where vec n=vec klVertvec krVert. The above equation defines hattensGamma(vec k) by how it operates on second-order, symmetric tensors. A closed-form expression of this tensor can be derived in the case of an isotropic material, for which","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tens C=lambdatens I_2otimestens I_2+2mutens I_4","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where tens I_2 (resp. tens I_4) is the second-order (resp. fourth-order) identity tensor, and lambda, mu are the Lamé coefficients. Then","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"vec ncdotbigl(tens I_2otimestens I_2bigr)cdotvec n=vec notimesvec n","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"then (recalling that lVertvec nrVert=1)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginaligned\nvec ncdottens I_4cdotvec n\n=tfrac12 n_ibigl(delta_ikdelta_jl+delta_ildelta_jkbigr)n_l\nvec e_jotimesvec e_k\n=tfrac12bigl(n_kn_j+n_in_idelta_jkbigr)vec e_jotimesvec e_k\n=tfrac12biglvec notimesvec n+bigl(vec ncdotvec nbigr)tens I_2bigr\n=tfrac12bigl(vec notimesvec n+tens I_2bigr)\n=vec notimesvec n+tfrac12bigl(tens I_2-vec notimesvec nbigr)\nendaligned","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"and finally, we find the following expression of the “matrix-vector” product","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginequation\nlabel_20210803063111\nvec ncdottens Ccdotvec n\n=bigl(lambda+2mubigr)vec notimesvec n\n+mubigl(tens I_2-vec notimesvec nbigr)\n=2mufrac1-nu1-2nuvec notimesvec n\n+mubigl(tens I_2-vec notimesvec nbigr)\nendequation","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where nu denotes the Poisson ratio. The above second-order tensor is easily inverted, since vec notimesvec n and tens I_2-vec notimesvec n are two orthogonal projectors (in the sense of the “dbldot” product)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"2mubigl(vec ncdottens Ccdotvec nbigr)^-1\n=frac1-2nu1-nuvec notimesvec n+2bigl(tens I_2-vec notimesvec nbigr)\n=2tens I_2-fracvec notimesvec n1-nu","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"from which it results that","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"2mubigl(vec ncdottens Ccdotvec nbigr)^-1\ncdottildetenstaucdotvec n\n=2tildetenstaucdotvec n\n-fracvec ncdottildetenstaucdotvec n1-nuvec n","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"and we finally get","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"2muhattens Gamma(vec k)dbldottildetens tau\n=bigl(tildetens taucdotvec nbigr)otimesvec n\n+vec notimesbigl(tildetens taucdotvec nbigr)\n-fracvec ncdottildetens taucdotvec n1-nuvec notimesvec n","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The components of the hattens Gamma tensor are then readily found","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"hatGamma_ijkl(vec k)\n=fracdelta_ikn_jn_l+delta_iln_jn_k+delta_jkn_in_l+delta_jln_in_k4mu\n-fracn_in_jn_kn_l2mubigl(1-nubigr)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"which coincide with classical expressions (see e.g. Suquet, 1990). Implementation of the above equation is cumbersome; it is only used for testing purposes. In Scapin, only the matvec product is required, and Eq. \\eqref{_20210803063111} was implemented.","category":"page"},{"location":"theory/continuous_green_operators/#Hyperelasticity","page":"Continuous Green operators","title":"Hyperelasticity","text":"","category":"section"},{"location":"theory/discrete_green_operators/#Discrete-Green-operators","page":"Discrete Green operators","title":"Discrete Green operators","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"In this chapter, we introduce various discretizations of the Green operator; we will adopt the vocabulary of linear elasticity, although the concepts apply to all the various physical models presented in Chap. “Continuous Green operators”.","category":"page"},{"location":"theory/discrete_green_operators/#","page":"Discrete Green operators","title":"The fftfreq function","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"For n Ninnaturals, 0leq nN, we introduce fftfreq(n N)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"fftfreq(n N)=\nbegincases\nn  textif 2nN\nn-N  textotherwise\nendcases","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"For n0 or ngeq N, fftfreq(n N) is defined by N-periodicity. fftfreq is very similar to the NumPy fftfreq function. We have the important result (see proof in Sec. “Properties of the fftfreq function”.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"fftfreq(N-n N)=\nbegincases\nfftfreq(n)  textif 2n=N\n-fftfreq(n)  textotherwise\nendcases","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The fftfreq function can be defined for d-tuples as well","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tuple fftfreq(tuple n tuple N)\n=bigl(fftfreq(n_1 N_1) ldots fftfreq(n_d N_d)bigr)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"and we have again","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tuple fftfreq(tuple N-tuple n tuple N)=-tuple fftfreq(tuple n)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"if none of the n_i is such that 2n_i=N_i.","category":"page"},{"location":"theory/discrete_green_operators/#_20210914103411","page":"Discrete Green operators","title":"The approximation space","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"In order to define a discrete Green operator, we need to introduce the approximation space for the stress-polarizations. We will consider here stress-polarizations that are constant over each cell of a regular grid of size N_1timescdotstimes N_d. The cells of this grid are","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Omega_tuplep^tupleh=p_ih_ileq x_ibigl(p_i+1bigr)h_i i=1ldots d","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where tuplep=(p_1ldotsp_d)incellindices denotes a d-tuple of integers, such that 0leq p_iN_i, i=1ldots d and h_i=L_iN_i is the cell-size in the i-th direction. Note that, in the above expression, no summation is implied by the repeated index i. The total number of cells is lvert Nrvert=N_1cdots N_d.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"We consider discrete stress-polarizations tenstau^tupleh that are constant over each cell of the grid: tenstau_tuplep^tupleh denotes the constant value of tenstau^tupleh in cell Omega_tuplep^tupleh. The tupleh superscript reminds that tenstau^tupleh is a discrete approximation of the true stress-polarization tenstau. We will call this approximation subspace: tensors_2^tupleh(Omega).","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"As discussed TODO: xref, the discrete Green operator is defined as the restriction to this approximation space of the continuous Green operator, seen as a bilinear form, or an approximation of it. In other words, we want to propose an approximation of the quantity","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"langletensvarpi^tuplehdbldottensGamma(tenstau^tupleh)rangle\nsimeqlangletensvarpi^tuplehdbldottensGamma^tupleh(tens\ntau^tupleh)ranglequadtextfor all tenstau^tupleh\ntensvarpi^tuplehintensors_2^tupleh(Omega)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where tensGamma^tupleh is defined only over tensors_2(Omega). tensGamma^tupleh can therefore be seen as a linear mapping between the cell values tenstau_tuplep^tupleh of tenstau^tuplep and the cell values of tensGamma^tupleh(tenstau^tupleh); tensGamma^tupleh is therefore a matrix, and the above equation should be understood as","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginequation\nlabeleq20210914103849\nlangletensvarpi^tuplehdbldottensGamma(tenstau^tupleh)rangle\nsimeqfrac1lverttupleNrvertsum_tuplep tupleqincellindices\ntensvarpi_tuplep^tuplehdbldot\ntensGamma_tupleptupleq^tuplehdbldottens\ntau_tupleq^tupleh\nquadtextfor allquad\ntenstau^tuplehtensvarpi^tuplehintensors_2^tupleh(Omega)\nendequation","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The continuous Green operator is translation invariant, and this property will of course be transferred to the “exact” discrete Green operator; we will in fact require all dicretizations of the Green operator to have this property. In other words, tensGamma_tupleptupleq^tupleh=tensGamma_tuple p-tuple q^tupleh and the above equation reads","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"langletensvarpi^tuplehdbldottensGamma(tenstau^tupleh)rangle\nsimeqfrac1lverttupleNrvertsum_tuplep tupleqincellindices\ntensvarpi_tuplep^tuplehdbldot\ntensGamma_tuple p-tuple q^tuplehdbldottens\ntau_tupleq^tuplehquadtextfor all tenstau^tuplehtens\nvarpi^tuplehintensors_2^tupleh(Omega)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that tensGamma_tuplep^tupleh is now indexed by one index only and its DFT can be introduced unambiguously","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginalignedb\nfrac1lverttuple Nrvertsum_tuplep tupleqincellindices\ntensvarpi_tuplep^tuplehdbldottensGamma_tuple p-tuple q^tuple h\ndbldottenstau_tupleq^tupleh\n=frac1lverttuple Nrvert^2sum_tuple p tuple q tuple nincellindices\nexpBigl2IPIsum_j=1^dfracn_jN_jbigl(p_j-q_jbigr)Bigr\ntensvarpi_tuplep^tuplehdbldothattensGamma_tuple n^tuple h\ndbldottenstau_tuple q^tuple h\n=frac1lverttuple Nrvert^2\nsum_tuple nincellindicesBiglsum_tuplepincellindices\nexpBigl(2IPIsum_j=1^dfracn_jp_jN_jBigr)\ntensvarpi_tuple p^tuple hBigrdbldothattensGamma_tuple n^tuple h\ndbldotBiglsum_tuple qincellindicesexpBigl(-2IPIsum_j=1^d\nfracn_jq_jN_jtenstau_tuple q^tuplehBigr)Bigr\nendaligned","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Since tensvarpi is real, we have conj(tensvarpi_tuple p^h)=tensvarpi_tuple p^h and the first sum in square brackets reads","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"sum_tuplepincellindicesexpBigl(2IPIsum_j=1^dfracn_jp_jN_jBigr)\ntensvarpi_tuple p^tuple h=conjBiglsum_tuplepincellindices\nexpBigl(-2IPIsum_j=1^dfracn_jp_jN_jBigr)\ntensvarpi_tuple p^tuple hBigr\n=conj(hattensvarpi_tuple n^tuple h)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"while the second sum in square brackets reduces to hattenstau_tuple n^tuple h. Gathering the above results, we find","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"frac1lverttuple Nrvertsum_tuple p tuple qincellindices\ntensvarpi_tuple p^tuple hdbldottensGamma_tuple p-tuple q^tuple h\ndbldottenstau_tuple q^tuple h=frac1lverttuple Nrvert^2\nsum_tuple nincellindicesconj(hattensvarpi_tuple n^tuple h)\ndbldothattensGamma_tuple n^tuple hdbldot\nhattenstau_tuple n^tuple h","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The above equation can be understood as follows. tensGamma^tuple h is a linear operator that maps the cell-wise constant field tenstau^tuple h to the cell-wise constant field tenseta^tuple h, the cell-values of which are given by their DFT","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tenseta_tuple p^tuple h=\ndft^-1_tuple p(hattenseta_bullet^tuple h)quadtextwith\nquadhattenseta_tuple n^tuple h\n=hattensGamma_tuple n^tuple hdbldot\nhattenstau_tuple n^tuple h","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Then, from the Plancherel theorem","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"frac1lverttuple Nrvert^2\nsum_tuple nincellindicesconj(hattensvarpi_tuple n^tuple h)\ndbldothattensGamma_tuple n^tuple hdbldot\nhattenstau_tuple n^tuple h=frac1lverttuple Nrvert^2\nsum_tuple nincellindicesconj(hattensvarpi_tuple n^tuple h)\ndbldothattenseta_tuple n^tuple h=frac1lverttuple Nrvert\nsum_tuple pincellindicestensvarpi_tuple p^tuple h\ndbldottenseta_tuple n^tuple h","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"and the last sum can be seen as the volume average langletensvarpi^tuple hdbldottenseta^tuple hrangle. Remembering that this expression was proposed as an approximation of langletensvarpi^tuple hdbldottensGamma(tenstau^tuple h)rangle, we finally find","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"langletensvarpi^tuple hdbldottensGamma(tenstau^tuple h)rangle\nsimeqlangletensvarpi^tuple hdbldottenseta^tuple hrangle\n=langletensvarpi^tuple hdbldottensGamma^tuple h(tenstau^tuple h)rangle\nquadtextfor all tensvarpi^tuple hintensors_2^tuple h(Omega)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"from which we find","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tensGamma(tenstau^tuple h)simeqtensGamma^tuple h\n(tenstau^tuple h)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The discrete Green operator, which was first introduced as an approximation of the continuous Green operator, seen as a bilinear form, can also be understood as an approximation of the continuous Green operator, seen as a linear mapping. This latter point of view will become extremely efficient when it comes to discretizing the Lippmann–Schwinger equation.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"It results from the above developments that an explicit expression of the discrete Green operator as a (gigantic) matrix is never needed. Instead, the matrix-vector product tenstau^tuple hmapstotensGamma^tuple h(tenstau^tuple h) is implemented in a matrix-free fashion as follows","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Given tenstau^tuple hintensors_2^tuple h(Omega), compute the discrete Fourier transform hattenstau_tuple n^tuple h of its cell-values:hattenstau_tuple n^tuple h=dft_tuple n(tenstau_bullet^tuple h),\nfor each discrete frequency, compute hattenseta_tuple n^tuple h=hattensGamma_tuple n^tuple hdbldothattenstau_tuple n^tuple h,\ncompute the inverse discrete Fourier transform tenseta_tuplep^tuple h of hattenseta_tuplen^tuple h,","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"discrete Fourier transforms being computed in steps 1 and 3 by means of the FFT.","category":"page"},{"location":"theory/discrete_green_operators/#_20210803053100","page":"Discrete Green operators","title":"Condition for the discrete Green operator to map real fields onto real fields","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"In the remainder of this chapter, we propose various discretizations of the Green operator. Before we proceed, though, it should be emphasized that the discrete Green operator must map a real field onto a real field. In other words, we must have hattenseta_tuple N-tuple n^tuple h=conj(hattenseta_tuple n^tuple h) for all tuple n. Since hattenseta_tuple n^tuple h =hattensGamma_tuple n^tuple hdbldothattenstau_tuple n^tuple h and hattenstau_tuple n already satisfies this condition (it is the DFT of a real field), we find the following requirement.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Any discrete operator that will be considered below must ensure that","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple N-tuple n^tuple h\n=conj(hattensGamma_tuple n^tuple h)\nquadtextfor allquadtuple nincellindices","category":"page"},{"location":"theory/discrete_green_operators/#Discretizations-of-the-Green-operator","page":"Discrete Green operators","title":"Discretizations of the Green operator","text":"","category":"section"},{"location":"theory/discrete_green_operators/#The-finite-element-discretization","page":"Discrete Green operators","title":"The finite element discretization","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"As discussed in section “The approximation space” [see in particular Eq. \\eqref{eq20210914103849}], the discrete Green operator can be seen as an operator that delivers the cell-averages of the strains induced by a cell-wise constant eigenstress tenstau^tuplehintensors_2^tupleh(Omega). In other words, let us consider the solution to the following problem (see Sec. on elasticity)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginequation\nlabeleq20210914140834\ntextFind tenssigmainstresses_0(Omega)\ntext and tensvarepsiloninstrains_0(Omega)\ntext such that tenssigma=tens Cdbldottensvarepsilon+tenstau^tupleh\ntext ae in Omega\nendequation","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that, compared to the general problem that defines the continuous Green operator, the above problem differs by the space where tenstau^tupleh lives. An approximate solution to this problem can be retrieved from a finite element discretization (Brisard 2017)[1], where the mesh coincides with the grid introduced previously and each element is discretized with linear shape functions. The resulting linear system can be solved efficiently by means of a matrix-free approach that is outlined below.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"[1]: The preprint of this paper is freely available on the HAL   archive; it is not   the final version, but the theoretical sections were unchanged through the   review process.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Introducing the nodal displacement vec u_tuplen at node tuplenincellindices, we define the inerpolated displacement vec u^tupleh(vec x) and strain tensstrain^tupleh(vec x), as well as the cell-average of the latter, ``\\overline{\\tens\\strain}_\\tuple{p}^\\tuple{h}","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tensvarepsilon^tupleh(vec x)=bigl(vec\nu^tuplehsymotimesnablabigr)(vec x)\nquadtextandquad\noverlinetensvarepsilon_tuplep^tupleh\n=frac1lverttuplehrvertint_Omega_tupleptensstrain^tupleh(vec x)\nD x_1cdotsD x_d","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where tupleh=h_1cdots h_d is the cell volume. In the present periodic setting, the DFT hatoverlinetensvarepsilon_tuplen^tupleh of tensvarepsilon can be expressed as follows","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginequation\nlabeleq20210914144114\nhatoverlinetensvarepsilon_tuplen^tupleh\n=hattens B_tuplen^tuplehsymotimeshatvec u_tuplen^tupleh\nendequation","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where tens B is the so-called modal strain-displacement vector [see (Brisard 2017) for its expression].","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Then, it is recalled that the strain energy U is defined as the following integral over the whole unit-cell Ω (lambda, mu: Lamé coefficients)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"U=frac12int_Omegabigllambdabigl(trtensvarepsilon^tuplehbigr)^2\n+2mutensvarepsilon^tuplehdbldottensvarepsilon^tuplehbigr\nD x_1cdotsD x_d","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The strain energy is a quadratic form of the nodal displacements. Owing to the homogeneity of the material (the Lamé coefficients are constant over the unit-cell) and the periodic boundary conditions, the strain energy takes a simple expression in Fourier space","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginequation\nlabeleq20210914060318\nU=fraclverttuplehrvert2lverttupleNrvert\nsum_tuplenincellindices\nconjbigl(hatvec u_tuplen^tuplehbigr)\ncdothattens K_tuplen^tupleh\ncdothatvec u_tuplen^tupleh\nendequation","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where hattens K_tuplen^tupleh is the modal stiffness matrix, which is computed by the method XXX.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that, plugging the definition of the discrete Fourier transform into Eq. \\eqref{eq20210914060318} delivers the following expression","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginaligned\nU=fraclverttuplehrvert2lverttupleNrvert\nsum_tuplen tuplep tupleqincellindices\nconjbiglvec u_tuplep^tuplehexpbigl(-Iphi_tuplenpbigr)bigr\ncdothattens K_tuplen^tupleh\ncdotvec u_tupleq^tuplehexpbigl(-Iphi_tuplenqbigr)\n=fraclverttuplehrvert2lverttupleNrvert\nsum_tuplen tuplep tupleqincellindices\nconjbigl(vec u_tuplep^tuplehbigr)\ncdothattens K_tuplen^tupleh\ncdotvec u_tupleq^tupleh\nexpbiglIbigl(phi_tuplenp-phi_tuplenqbigr)bigr\n=fraclverttuplehrvert2sum_tupleptupleq\nconjbigl(vec u_tuplep^tuplehbigr)cdottens K_tuplepq^tupleh\ncdotvec u_tupleq^tupleh\nendaligned","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tensK_tuplepq^tupleh\n=frac1lverttupleNrvertsum_tuplen\nhattens K_tuplen^tuplehexpbigl(Iphi_tuplentuplep-tupleqbigr)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"is the nodal stiffness matrix, which appears as a block-circulant matrix. This expresses the fact that the problem under consideration is translation-invariant, owing to the homogeneity of the material and the periodic boundary conditions (see also “On the d-dimensional brick element”).","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"danger: Danger\nThe modal stiffness matrix should be rescaled so as to lead to the more appropriate formulaU=frac12sum_tupleptupleqoverlinevec u_tuplep^tupleh\ncdottens K_tuplepq^tuplehcdotvec u_tupleq^tupleh","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"In order to derive a FE-approximate solution to the problem described by Eq. \\eqref{eq20210914140834}, we need to account for the contribution U^texteigen of the eigenstress tenstau^tupleh to the total potential energy Pi. This contribution reads, in the real space,","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"U^texteigen=int_Omegabigltenstau^tupleh(vec x)\ndbldottensvarepsilon(vec x)bigrD x_1cdotsD x_d","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"which can be expressed in Fourier space","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"U^texteigen=fraclverttuplehrvertlverttupleNrvert\nsum_tuplenincellindicesconjbigl(hatvec u_tuplenbigr)\ncdothattenstau_tuplen^tuplehcdot\nconjhattens B_tuplen^tupleh","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where hattens B_tuplen^tupleh is the modal strain-displacement operator introduced above, and hattenstau_tuplen^tupleh is the DFT of the cell-values of the cell-wise constant eigenstrain.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Optimization of Pi w.r.t. the nodal displacements delivers the following equations","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"beginequation\nlabeleq20210914145137\nhattens K_tuplen^tuplehcdothatvec u_tuplen^tupleh\n=-hattenstau_tuplen^tuplehcdothattens B_tuplen^tupleh\nendequation","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that these equations are uncoupled: they reduce to a dtimes d linear system for each Fourier mode. The solution to these equations delivers the modal displacements","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hatvec u_tuplen^tupleh\n=-bigl(hattens K_tuplen^tuplehbigr)^-1\ncdothattenstau_tuplen^tupleh\ncdothattens B_tuplen^tupleh","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Combining with Eq. \\eqref{eq20210914144114}, we get the following expression of the cell-average of the strains, in Fourier space","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hatoverlinetensvarepsilon_tuplen^tupleh\n=-hatvec B_tuplen^tuplehsymotimes\nbiglbigl(hattens K_tuplen^tuplehbigr)^-1\ncdothattenstau_tuplen^tuplehcdothatvec B_tuplen^tuplehbigr","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Upon appropriate symmetrization (tenstau^tupleh and tensvarepsilon^tupleh are both symmetric, second-rank tensors), we find","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hatoverlinetensvarepsilon_tuplen^tupleh=-hattensGamma_tuplen^tupleh textBri17dbldothattenstau_tuplen^tupleh","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"with","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuplen^tupleh textBri17\n=hatvec B_tuplen^tupleh\nsymotimesbigl(tens K_tuplen^tuplehbigr)^-1\nsymotimeshatvec B_tuplen^tupleh","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"which defines the discrete Green operator.","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"note: Note\nEq. \\eqref{eq20210914145137} is singular for vec k = vec 0. Indeed, in a periodic setting, the displacement is defined up to a constant translation. It is convenient to select the solution with zero average, that is hatu_tuple0^tupleh=vec 0.","category":"page"},{"location":"theory/discrete_green_operators/#The-discretization-of-Brisard-and-Dormieux","page":"Discrete Green operators","title":"The discretization of Brisard and Dormieux","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"It was proved by Brisard and Dormieux (2010) that, for all tenstau^tuple h tensvarpi^tuple hintensors_2^tuple h(Omega)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"langletensvarpi^hdbldottensGamma(tenstau^h)rangle=frac1N^2\nsum_n_1=0^N_1-1cdotssum_n_d=0^N_d-1conj(hattensvarpi_\ntuplen^h)dbldothattensGamma_n^h mathrmBD10dbldot\nhattenstau_tuplen^h","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple n^tuple h mathrmBD10\n=sum_tuple minintegers^dbiglF(vecalpha_tuple n+tuple mtuple N)\nbigr^2hattensGamma(vec k_tuple n+tuple mtuple N)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"where tuplen+mN denotes the d-tuple: tuple n+tuple mtuple N=(n_1+m_1N_1 ldots n_d+m_dN_d), while alpha_tuplen is the following dimensionless vector","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"vecalpha_tuplen\n=frac2pi h_1n_1L_1vec e_1+cdots+frac2pi h_dn_dL_dvec e_d","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"finally, F is the tensor product of sine cardinal functions","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"F(vecalpha)=sincfracalpha_12cdotssincfracalpha_d2","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that the above equations deliver the exact cell-averages of the Green operator, applied exactly to any cell-wise constant polarization field. Unfortunately, the series that defines the discrete Green operator can in general not be evaluated, owing to very slow convergence. Therefore, this discrete Green operator is unpractical, and is recalled here only for pedagocial reasons.","category":"page"},{"location":"theory/discrete_green_operators/#The-discretization-of-Moulinec-and-Suquet","page":"Discrete Green operators","title":"The discretization of Moulinec and Suquet","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"This is probably the most simple discretization, introduced first by Moulinec and Suquet (1994, 1998). Only the lowest (positive and negative) frequencies are kept","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple n^tuple h mathrmMS94=hattensGamma\n(vec k_tuple Z(tuple n tuple N))","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"We must check that the “Condition for the discrete Green operator to map real fields onto real fields” is satisfied. Using the “Properties of the fftfreq function” of the fftfreq function and assuming first that none of the n_i is such that 2n_i=N_i","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple N-tuple n^tuple h mathrmMS94\n=hattensGamma(vec k_tuple Z(tuple N-tuple n tuple N))\n=hattensGamma(vec k_-tuple Z(tuple n tuple N))\n=hattensGamma(-vec k_tuple Z(tuple n tuple N))","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"All Green operators presented in Chap. “Continuous Green operators” are such that hattensGamma(-vec k)=hattensGamma(vec k), therefore","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple N-tuple n^tuple h mathrmMS94\n=hattensGamma(vec k_tuple Z(tuple n tuple N))\n=hattensGamma_tuple n^tuple h mathrmMS94","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"and the property is verified. Conversely, if all the n_i are such that 2n_i=N_i, then","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma_tuple N-tuple n^tuple h mathrmMS94\n=hattensGamma(vec k_tuple Z(tuple N-tuple n tuple N))\n=hattensGamma(vec k_tuple Z(tuple n tuple N))\n=hattensGamma_tuple n^tuple h mathrmMS94","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"More problematic is the case when a few, but not all, n_i are such that 2n_i=N_i. Then the property does not hold for such frequencies. Moulinec and Suquet (1998) use a specific treatment for such cases","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"hattensGamma(vec k_tuple n)=tens C^-1","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"if one of the n_i is such that 2n_i=N_i. This is implemented in Scapin. Note that such cases occur only for even-sized grids.","category":"page"},{"location":"theory/nomenclature/#_20210911034346","page":"Nomenclature","title":"Nomenclature","text":"","category":"section"},{"location":"theory/nomenclature/","page":"Nomenclature","title":"Nomenclature","text":"d: dimension of the physical space (typically d=2 3)\nOmega: d-dimensional unit-cell\nL_1ldots L_d: dimensions of the unit-cell: Omega=(0 L_1)times(0 L_2)timescdotstimes(0 L_d)\nlvertOmegarvert=L_1L_2cdots L_d: volume of the unit-cell\ntuplen: d-dimensional tuple of integers tuplen=(n_1 n_2 ldots n_d)\ntupleN=(N_1 N_2 ldots N_d): size of the simulation grid\nlvert Nrvert=N_1N_2cdots N_d: total number of cells\nh_i=L_iN_i: size of the cells (i=1 ldots d)\ncellindices=0 ldots N_1-1times0 ldots N_2-1times0 ldots N_3-1: set of cell indices\nOmega_tuplep: cells of the simulation grid (tuplepincellindices)","category":"page"},{"location":"theory/fourier/#Fourier-transforms-in-a-periodic-setting","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"","category":"section"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"This chapter provides a brief overview of the two Fourier transforms that are going to be used in the previous document, namely Fourier series and discrete Fourier transforms.","category":"page"},{"location":"theory/fourier/#_20210911054826","page":"Fourier transforms in a periodic setting","title":"Fourier series","text":"","category":"section"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"Owing to the periodic setting, the fields that are involved in the various BVPs to be discussed in this document are expanded in Fourier series. tens T being a Omega-periodic tensor field (with sufficient regularity), the following decomposition holds","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"tens T(vec x)\n=sum_tuplenintegers^dmathcal F(tens T)(vec k_tuplen)\nexp(Ivec k_tuplencdotvec x)","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"where tuplen denotes a d-dimensional tuple of integers (see Nomenclature). The wave vectors vec k_tuplen are given by","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"vec k_tuplen=frac2PI n_1L_1vec e_1+frac2PI n_2L_2vec e_2\n+cdots+frac2PI n_dL_dvec e_d","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"and the Fourier coefficients of tens T are defined as follows","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"mathcal F(tens T)(vec k)=frac1lvertOmegarvertint_vec xinOmega\ntens T(vec x)exp(-Ivec kcdotvec x)D x_1cdotsD x_d","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"It is recalled that the Fourier coefficients of the gradient and divergence of tens T can readily be computed from the Fourier coefficients of tens T","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"mathcal F(tens Totimesnabla)(vec k)=mathcal F(tens T)(vec k)otimesIvec k\nquadtextandquad\nmathcal F(tens Tcdotnabla)(vec k)=mathcal F(tens T)(vec k)cdotIvec k","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"When no confusion is possible, we will use a tilde to denote the Fourier coefficients: tildetens T_tuplen=mathcal F(tens T)(vec k_tuplen).","category":"page"},{"location":"theory/fourier/#_20210911055458","page":"Fourier transforms in a periodic setting","title":"Discrete Fourier transforms","text":"","category":"section"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"note: Naming conventions for indices\nIn the present section, we use the following convention for naming indices:italic, latin indices (i, j, …) refer to components of a tensor in the d-dimensional space,\nupright, sans-serif, indices are multi-indices over a cartesian grid,\ntuplep, tupleq are multi-indices in the real space (“pixels”),\ntuplem, tuplen are multi-indices in the frequency space.","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"We consider a d-dimensional grid of size N_1timescdotstimes N_d. The set of cell indices over this grid is","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"cellindices=1ldots N_1timescdotstimes1 ldots N_d","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"For tuplen tuplepincellindices, we define Phi_tuplentuplep","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"phi_tuplentuplep=2PIfracbigl(n_1-1bigr)bigl(p_1-1bigr)N_1\n+cdots+2PIfracbigl(n_d-1bigr)bigl(p_d-1bigr)N_d","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"warning: Indexing conventions\nOwing to Julia being one-based, all multi-indices start at one, hence the “-1” correction in the above formula.","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"Let x=(x_tuplep) be a finite set of scalar values indexed by the d-tuple tuplepincellindices. The discrete Fourier transform is a discrete set of scalar values dft_tuplen(x) indexed by the d-tuple tupleninintegers^d, defined as follows","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"dft_tuplen(x)=sum_tuplepincellindices\nexpbigl(-Iphi_tuplentuplepbigr)x_tuplep","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"Note that in the above definition, no restrictions are applied to the multi-index tuplen. However, it can be verified that the above series of tensors is in fact tupleN-periodic: dft_tuplen+tupleN(x)=dft_tuplen(x), where tuplen+tupleN=(n_1+N_1 ldots n_d+N_d). Therefore, the tuplen-index is effectively restricted to 0leq n_iN_i as well. The most important results concerning the DFT are the inversion formula","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"x_tuplep=frac1lverttupleNrvertsum_tuplenincellindices\nexpbigl(Iphi_tuplentuplepbigr)dft_tuplen(x)","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"the Plancherel theorem","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"sum_tuplepincellindicesconj(x_tuple p)y_tuple p\n=frac1lverttuple Nrvertsum_tuplenincellindices\nconjdft_tuple n(x)dft_tuple n(y)","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"and the circular convolution theorem","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"dft_tuplen(xast y)=dft_tuplen(x)dft_tuplen(y)\nquadtextwherequad\n(xast y)_tuple p=sum_tupleqincellindices\nx_tupleqy_tuplep-tupleq+1","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"The DFT is readily extended to tensor data points. In the absence of ambiguity, the shorthand hatx_tuplen will be adopted for dft_tuplen(x).","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"To close this section, we observe that the DFT of a series of real data points is a series of complex data points. However, these complex values have the following property","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"dft_tupleN-tuplen(x)=conjdft_tuplen(x)","category":"page"},{"location":"theory/fourier/","page":"Fourier transforms in a periodic setting","title":"Fourier transforms in a periodic setting","text":"The above condition is actually a necessary and sufficient condition for the x_tuplep to be real.","category":"page"},{"location":"theory/appendix/#Appendix","page":"Appendix","title":"Appendix","text":"","category":"section"},{"location":"theory/appendix/#_20210911035430","page":"Appendix","title":"Properties of the fftfreq function","text":"","category":"section"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"In this paragraph, we prove the following property of the fftfreq function","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"fftfreq(N-n N)=\nbegincases\nfftfreq(n)  textif 2n=N\n-fftfreq(n)  textotherwise\nendcases","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"Several cases must be considered.","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"If n=0\nfftfreq(N-n N)=fftfreq(N N)=fftfreq(0 N)=0=-fftfreq(n N)\nIf N is even, N=2M\nIf 0nM\nbegingather*\n2nNquadRightarrowquad fftfreq(n N)=n\nbeginaligned\nMN-nquadRightarrowquad N2bigl(N-nbigr)\nquadRightarrowquad fftfreq(N-n N)=N-n-N=-n\nendaligned\nendgather*\nIf n=M\nbegingather*\n2n=NquadRightarrowquad fftfreq(n N)=n-N=-M\n2(N-n)=2M=NquadRightarrowquad fftfreq(N-n N)=-M\nendgather*\nIf MnN\nbegingather*\nN2nquadRightarrowquad fftfreq(n N)=n-N\nbeginaligned\nN-nMquadRightarrowquad 2bigl(N-nbigr)N\nquadRightarrowquad fftfreq(N-n N)=N-n\nendaligned\nendgather*\nIf N is odd, N=2M+1\nIf 0nleq M\nbegingather*\n2nleq 2MNquadRightarrowquad fftfreq(n N)=n\nbeginaligned\nM+1leq N-nquadRightarrowquad N2bigl(N-nbigr)\nquadRightarrowquad fftfreq(N-n N)=N-n-N=-n\nendaligned\nendgather*\nIf M+1leq nN\nbegingather*\nN+1leq 2nquadRightarrowquad fftfreq(n N)=n-N\nbeginaligned\nN-nleq N-M-1=MquadRightarrowquad 2bigl(N-nbigr)leq 2MN\nquadRightarrowquad fftfreq(N-n N)=N-n\nendaligned\nendgather*","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Scapin","category":"page"},{"location":"#Scapin","page":"Home","title":"Scapin","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Scapin.","category":"page"},{"location":"#Theory","page":"Home","title":"Theory","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"theory/nomenclature.md\",\n\t\"theory/fourier.md\",\n\t\"theory/continuous_green_operators.md\",\n\t\"theory/discrete_green_operators.md\",\n\t\"theory/brick_element.md\",\n\t\"theory/appendix.md\",\n\t\"theory/bibliography.md\"\n]","category":"page"},{"location":"#API-Docs","page":"Home","title":"API Docs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"api.md\"\n]","category":"page"}]
}
