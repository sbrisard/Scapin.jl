var documenterSearchIndex = {"docs":
[{"location":"api/","page":"Library","title":"Library","text":"Modules = [Scapin]","category":"page"},{"location":"api/#Scapin.Hooke","page":"Library","title":"Scapin.Hooke","text":"Isotropic, linear elastic material.\n\nHooke{T, DIM}(μ::T, ν::T)\n\nCreate a new instance with shear modulus μ and Poisson ratio ν.\n\nnote: Material stability\nMaterial stability requires that μ > 0 and -1 < ν < 1/2; these conditions are not enforced here. In other words, unstable materials can be defined.\n\ntip: Plane stresses vs. plane strains\nIn the current implementation, DIM = 2 refers to plane strain elasticity. For plane stresses, the true Poisson ratio ν should be replaced with the fictitious ratio ν̃ = ν / (1 + ν).\n\n\n\n\n\n","category":"type"},{"location":"api/#Scapin.bulk_modulus-Tuple{Hooke}","page":"Library","title":"Scapin.bulk_modulus","text":"bulk_modulus(C::Hooke)\n\nReturn the bulk modulus κ for the specified Hooke material.\n\nFor plane strain elasticity\n\nκ = μ / (1 - 2ν),\n\nand, for 3D elasticity\n\nκ = 2/3 μ (1 + ν) / (1 - 2ν).\n\n\n\n\n\n","category":"method"},{"location":"theory/discrete_green_operators/#Discrete-Green-operators","page":"Discrete Green operators","title":"Discrete Green operators","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"In this chapter, we introduce various discretizations of the Green operator; we will adopt the vocabulary of linear elasticity, although the concepts apply to all the various physical models presented in Continuous Green operators.","category":"page"},{"location":"theory/discrete_green_operators/#On-the-discrete-Fourier-transform","page":"Discrete Green operators","title":"On the discrete Fourier transform","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Let x=(x_tuplep) be a finite set of scalar values indexed by the d-tuple tuplep=(p_1 ldots p_d) where 0leq p_iN_i (N_i is the number of data points in the i-th direction). The discrete Fourier transform is a discrete set of scalar values dft_tuplen(x) indexed by the d-tuple tupleninintegers^d, defined as follows","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"dft_tuplen(x)=sum_p_1=0^N_1-1cdotssum_p_d=0^N_d-1\nexpBigl-2IPIBigl(fracn_1p_1N_1\n+cdots+fracn_dp_dN_dBigr)Bigr x_tuplep","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"Note that in the above definition, no restrictions are applied to the multi-index tuplen. However, it can be verified that the above series of tensors is in fact tupleN-periodic: dft_tuplen+tupleN(x)=dft_tuplen(x), where tuplen+tupleN=(n_1+N_1 ldots n_d+N_d). Therefore, the tuplen-index is effectively restricted to 0leq n_iN_i as well. The most important results concerning the DFT are the inversion formula","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"x_tuplep=frac1lverttupleNrvertsum_n_1=0^N_1-1cdots\nsum_n_d=0^N_d-1expBigl2IPIBigl(fracn_1p_1N_1+cdots+\nfracn_dp_dN_dBigr)Bigrdft_tuplen(x)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"the Plancherel theorem","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"sum_p_1=1^N_1-1cdotssum_p_d=1^N_d-1conj(x_tuple p)y_tuple p\n=frac1lverttuple Nrvertsum_n_1=1^N_1-1cdotssum_n_d=1^N_d-1\nconjdft_tuple n(x)dft_tuple n(y)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"and the circular convolution theorem","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"dft_tuplen(xast y)=dft_tuplen(x)dft_tuplen(y)\nquadtextwherequad\n(xast y)_tuple p=sum_q_1=0^N_1-1cdotssum_q_d=0^N_d-1\nx_tupleqy_tuplep-tupleq","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The DFT is readily extended to tensor data points. In the absence of ambiguity, the shorthand hatx_tuplen will be adopted for dft_tuplen(x).","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"To close this section, we observe that the DFT of a series of real data points is a series of complex data points. However, these complex values have the following property","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"dft_tupleN-tuplen(x)=conjdft_tuplen(x)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The above condition is actually a necessary and sufficient condition for the x_tuplep to be real.","category":"page"},{"location":"theory/discrete_green_operators/#The-\\fftfreq-function","page":"Discrete Green operators","title":"The fftfreq function","text":"","category":"section"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"For n Ninnaturals, 0leq nN, we introduce fftfreq(n N)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"fftfreq(n N)=\nbegincases\nn  textif 2nN\nn-N  textotherwise\nendcases","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"For n0 or ngeq N, fftfreq(n N) is defined by N-periodicity. fftfreq is very similar to the NumPy fftfreq function. We have the important result (see proof in Sec. Properties of the fftfreq function of the Appendix)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"fftfreq(N-n N)=\nbegincases\nfftfreq(n)  textif 2n=N\n-fftfreq(n)  textotherwise\nendcases","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"The fftfreq function can be defined for d-tuples as well","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tuple fftfreq(tuple n tuple N)\n=bigl(fftfreq(n_1 N_1) ldots fftfreq(n_d N_d)bigr)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"and we have again","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"tuple fftfreq(tuple N-tuple n tuple N)=-tuple fftfreq(tuple n)","category":"page"},{"location":"theory/discrete_green_operators/","page":"Discrete Green operators","title":"Discrete Green operators","text":"if none of the n_i is such that 2n_i=N_i.","category":"page"},{"location":"theory/continuous_green_operators/#Continuous-Green-operators","page":"Continuous Green operators","title":"Continuous Green operators","text":"","category":"section"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"In this chapter, we discuss various boundary-value problems in a periodic setting. For each of these problems, we introduce the associated Green operator.","category":"page"},{"location":"theory/continuous_green_operators/#On-Fourier-series","page":"Continuous Green operators","title":"On Fourier series","text":"","category":"section"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Owing to the periodic setting, the fields that are involved in the various BVPs to be discussed in this chapter are expanded in Fourier series. tens T being a Omega-periodic tensor field","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tens T(vec x)\n=sum_tuplenintegers^dmathcal F(tens T)(vec k_tuplen)\nexp(Ivec k_tuplencdotvec x)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where tuplen denotes a d-dimensional tuple of integers (see Nomenclature). The wave vectors vec k_tuplen are given by","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"vec k_tuplen=frac2PI n_1L_1vec e_1+frac2PI n_2L_2vec e_2\n+cdots+frac2PI n_dL_dvec e_d","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"and the Fourier coefficients of tens T are defined as follows","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"mathcal F(tens T)(vec k)=frac1Vint_vec xOmega\ntens T(vec x)exp(-Ivec kcdotvec x)D x_1cdotsD x_d","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"It is recalled that the Fourier coefficients of the gradient and divergence of tens T can readily be computed from the Fourier coefficients of tens T","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"mathcal F(tens Totimesnabla)(vec k)=mathcal F(tens T)(vec k)otimesIvec k\nquadtextandquad\nmathcal F(tens Tcdotnabla)(vec k)=mathcal F(tens T)(vec k)cdotIvec k","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"When no confusion is possible, we will use the tilde to denote the Fourier coefficients: tildetens T_tuplen=mathcal F(tens T)(vec k_tuplen).","category":"page"},{"location":"theory/continuous_green_operators/#Conductivity","page":"Continuous Green operators","title":"Conductivity","text":"","category":"section"},{"location":"theory/continuous_green_operators/#Elasticity","page":"Continuous Green operators","title":"Elasticity","text":"","category":"section"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"We first define a few functional spaces; tensors_2(Omega) denotes the space of second-order, symmetric, tensor fields, with square-integrable components. Then, the space tensstresses(Omega) of periodic, self-equilibrated stresses is defined as follows","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tenssigmainstresses(Omega)iffleft\nbegingathered\ntenssigmaintensors_2(Omega)\ntenssigmacdotnabla=vec 0text ae in Omega\ntenssigmacdotvec e_itext is L_ivec e_i\ntext-periodic for all i=1 2 ldots dtext (no summation)\nendgathered\nright","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where the last condition expresses the periodicity of tractions in all directions parallel to the sides of the unit-cell. The space tensstrains(Omega) of periodic, geometrically compatible strains is defined as follows","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tensvarepsiloninstrains(Omega)iffleft\nbegingathered\ntensvarepsilonintensors_2(Omega)\ntensvarepsilon=symbigl(vec uotimesnablabigr)\ntext ae in Omegatext for some vector field vec u\nvec utext has square-integrable components\nvec utext is Omegatext-periodic\nendgathered\nright","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Finally, we define the spaces of stresses and strains with zero average","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"stresses_0(Omega)=bigltenssigmainstresses(Omega)\nlangletenssigmarangle=tens0bigr\nquadtextandquad\nstrains_0(Omega)=tensvarepsiloninstrains(Omega)\nlangletensvarepsilonrangle=tens0bigr","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"We are now ready to define the periodic, fourth-order Green operator for strains tensGamma. Let tens C be the homogeneous elastic stiffness of the body Omega[1]. Let tenstauintensors_2(Omega) be a prescribed tensor field (stress-polarization). We want to find the equilibrium state of the body Omega, subjected to the eigenstress tenstau and periodic boundary conditions. In other words, we want to find the solution to the following problem","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"textFind tenssigmainstresses_0(Omega)\ntext and tensvarepsiloninstrains_0(Omega)\ntext such that tenssigma=tens Cdbldottensvarepsilon+tenstau\ntext ae in Omega","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"[1]: In other words, tens C is a constant, fourth-order tensor with major   and minor symmetries; furthermore, tens C is positive definite.","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Owing to the periodic boundary conditions, we use Fourier series expansions of tenstau, tenssigma, tensvarepsilon and vec u","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginBmatrix\ntenstau(vec x)\ntenssigma(vec x)\ntensvarepsilon(vec x)\nvec u(vec x)\nendBmatrix\n=sum_tupleninintegers^d\nbeginBmatrix\ntildetenstau_tuplen\ntildetenssigma_tuplen\ntildetensvarepsilon_tuplen\ntildevec u_tuplen\nendBmatrix\nexp(I vec k_tuplencdotvec x)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The Fourier modes tildetenssigma_tuplen, tildetensvarepsilon_tuplen and tildevec u_tuplen solve the following equations (respectively: equilibrium, geometric compatibility, constitutive relation)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"begingather\nlabeleq20210730094655\ntildetenssigma_tuplencdotvec k_tuplen=vec 0\nlabeleq20210730094504\ntildetensvarepsilon_tuplen\n=fracI2bigl(tildevec u_tuplenotimesvec k_tuplen\n+vec k_tuplenotimestildevec u_tuplenbigr)\nlabeleq20210730094514\ntildetenssigma_tuplen=tens Cdbldottildetensvarepsilon_tuplen\n+tildetenstau_tuplen\nendgather","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"Plugging Eq. \\eqref{eq:20210730094514} into Eq. \\eqref{eq:20210730094504}, and recalling that tens C has the minor symmetries, we find the following expression of tildetenssigma","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tildetenssigma_tuplen\n=Ibigl(tens Ccdotvec k_tuplenbigr)cdottildevec u_tuplen\n+tildetenstau_tuplen","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The Cauchy stress tensor being symmetric, Eq. \\eqref{eq:20210730094655} also reads vec k_tuplencdottildetenssigma_tuplen=vec 0 and","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginequation\n  labeleq16\n  tildevec u_tuplen\n  =Ibigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\n  cdottildetenstau_tuplencdotvec k_tuplen\nendequation","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"which delivers the following expression for the Fourier modes of the strain field","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginequation\nlabeleq20210730094915\ntildetensvarepsilon_tuplen\n=-tfrac12biglbigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\ncdottildetenstau_tuplencdotvec k_tuplenbigrotimesvec k_tuplen\n-tfrac12vec k_tuplen\notimesbiglbigl(vec k_tuplencdottens Ccdotvec k_tuplenbigr)^-1\ncdottildetenstau_tuplencdotvec k_tuplenbigr\nendequation","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The above relation defines a linear mapping between tildetenstau_tuplen and tildetensvarepsilon_tuplen. For each Fourier mode tuplen, we therefore introduce the fourth-order tensor tildetensGamma_tuplen with major and minor symmetries, such that tildetensvarepsilon_tuplen=-tildetensGamma_tuplendbldottildetenstau_tuplen. From Eq. \\eqref{eq:20210730094915}, it results that tildetensGamma_tuplen=hattensGamma(vec k_tuplen) where, for arbitrary wave-vector vec k, hattensGamma(vec k) is a fourth-order tensor with major and minor symmetries, such that","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginequation\n  labeleq20210730095035\n  hattensGamma(vec k)dbldottildetenstau\n  =tfrac12biglbigl(vec ncdottens Ccdotvec nbigr)^-1\n  cdottildetenstaucdotvec nbigrotimesvec n\n  +tfrac12vec notimesbiglbigl(vec ncdottens Ccdotvec nbigr)^-1\n  cdottildetenstaucdotvec nbigr\nendequation","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where vec n=vec klVertvec krVert. Eq. \\eqref{eq:20210730095035} defines hattensGamma(vec k) by how it operates on second-order, symmetric tensors. A closed-form expression of this tensor can be derived in the case of an isotropic material, for which","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"tens C=lambdatens I_2otimestens I_2+2μtens I_4","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where tens I_2 (resp. tens I_4) is the second-order (resp. fourth-order) identity tensor, and lambda, μ are the Lamé coefficients. Then","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"vec ncdotbigl(tens I_2otimestens I_2bigr)cdotvec n=vec notimesvec n","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"then (recalling that lVertvec nrVert=1)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginalignedb\nvec ncdottens I_4cdotvec n=tfrac12 n_ibigl(δ_ikδ_jl+\nδ_ilδ_jkbigr)n_lvec e_jotimesvec e_k=tfrac12bigl(n_kn_j\n+n_in_iδ_jkbigr)vec e_jotimesvec e_k\n=tfrac12biglvec notimesvec n+bigl(vec ncdotvec nbigr)tens I_2\nbigr=tfrac12bigl(vec notimesvec n+tens I_2bigr)\n=vec notimesvec n+tfrac12bigl(tens I_2-vec notimesvec nbigr)\nendaligned","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"and finally","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"vec ncdottens Ccdotvec n\n=bigl(lambda+2mubigr)vec notimesvec n\n+mubigl(tens I_2-vec notimesvec nbigr)\n=2mufrac1-nu1-2nuvec notimesvec n\n+mubigl(tens I_2-vec notimesvec nbigr)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"where nu denotes the Poisson ratio. The above second-order tensor is easily inverted, since vec notimesvec n and tens I_2-vec notimesvec n are two orthogonal projectors (in the sense of the “dbldot” product)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"2mubigl(vec ncdottens Ccdotvec nbigr)^-1\n=frac1-2nu1-nuvec notimesvec n+2bigl(tens I_2-vec notimesvec nbigr)\n=2tens I_2-fracvec notimesvec n1-nu","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"from which it results that","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"2mubigl(vec ncdottens Ccdotvec nbigr)^-1\ncdottildetenstaucdotvec n\n=2tildetenstaucdotvec n\n-fracvec ncdottildetenstaucdotvec n1-nuvec n","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"and finally","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"beginequation\nlabeleq20210730095803\n2muhattens Gamma(vec k)dbldottildetens tau\n=bigl(tildetens taucdotvec nbigr)otimesvec n\n+vec notimesbigl(tildetens taucdotvec nbigr)\n-fracvec ncdottildetens taucdotvec n1-nuvec notimesvec n\nendequation","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"The components of the hattens Gamma tensor are then readily found","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"hatGamma_ijkl(vec k)\n=fracdelta_ikn_jn_l+delta_iln_jn_k+delta_jkn_in_l+delta_jln_in_k4mu\n-fracn_in_jn_kn_l2mubigl(1-nubigr)","category":"page"},{"location":"theory/continuous_green_operators/","page":"Continuous Green operators","title":"Continuous Green operators","text":"which coincide with classical expressions \\parencite[see e.g.][]{suqu1990}. Implementation of the above equation is cumbersome; it is only used for testing purposes. In Scapin, only the matvec product is required: Eq. \\eqref{eq:20210730095803} was implemented.","category":"page"},{"location":"theory/continuous_green_operators/#Hyperelasticity","page":"Continuous Green operators","title":"Hyperelasticity","text":"","category":"section"},{"location":"theory/nomenclature/#Nomenclature","page":"Nomenclature","title":"Nomenclature","text":"","category":"section"},{"location":"theory/nomenclature/","page":"Nomenclature","title":"Nomenclature","text":"d: dimension of the physical space (typically d=2 3)\nΩ: d-dimensional unit-cell\nL_1ldots L_d: dimensions of the unit-cell: Ω=(0 L_1)times(0 L_2)timescdotstimes(0 L_d)\nlvertΩrvert=L_1L_2cdots L_d: volume of the unit-cell\ntuplen: d-dimensional tuple of integers tuplen=(n_1 n_2 ldots n_d)\ntupleN=(N_1 N_2 ldots N_d): size of the simulation grid\nlvert Nrvert=N_1N_2cdots N_d: total number of cells\nh_i=L_iN_i: size of the cells (i=1 ldots d)\ncellindices=0 ldots N_1-1times0 ldots N_2-1times0 ldots N_3-1: set of cell indices\nΩ_tuplep: cells of the simulation grid (tuplepincellindices)","category":"page"},{"location":"theory/appendix/#Appendix","page":"Appendix","title":"Appendix","text":"","category":"section"},{"location":"theory/appendix/#Properties-of-the-\\fftfreq-function","page":"Appendix","title":"Properties of the fftfreq function","text":"","category":"section"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"In this paragraph, we prove the following property of the fftfreq function","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"fftfreq(N-n N)=\nbegincases\nfftfreq(n)  textif 2n=N\n-fftfreq(n)  textotherwise\nendcases","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"Several cases must be considered.","category":"page"},{"location":"theory/appendix/","page":"Appendix","title":"Appendix","text":"If n=0\nfftfreq(N-n N)=fftfreq(N N)=fftfreq(0 N)=0=-fftfreq(n N)\nIf N is even, N=2M\nIf 0nM\nbegingather*\n2nNquadRightarrowquad fftfreq(n N)=n\nbeginaligned\nMN-nquadRightarrowquad N2bigl(N-nbigr)\nquadRightarrowquad fftfreq(N-n N)=N-n-N=-n\nendaligned\nendgather*\nIf n=M\nbegingather*\n2n=NquadRightarrowquad fftfreq(n N)=n-N=-M\n2(N-n)=2M=NquadRightarrowquad fftfreq(N-n N)=-M\nendgather*\nIf MnN\nbegingather*\nN2nquadRightarrowquad fftfreq(n N)=n-N\nbeginaligned\nN-nMquadRightarrowquad 2bigl(N-nbigr)N\nquadRightarrowquad fftfreq(N-n N)=N-n\nendaligned\nendgather*\nIf N is odd, N=2M+1\nIf 0nleq M\nbegingather*\n2nleq 2MNquadRightarrowquad fftfreq(n N)=n\nbeginaligned\nM+1leq N-nquadRightarrowquad N2bigl(N-nbigr)\nquadRightarrowquad fftfreq(N-n N)=N-n-N=-n\nendaligned\nendgather*\nIf M+1leq nN\nbegingather*\nN+1leq 2nquadRightarrowquad fftfreq(n N)=n-N\nbeginaligned\nN-nleq N-M-1=MquadRightarrowquad 2bigl(N-nbigr)leq 2MN\nquadRightarrowquad fftfreq(N-n N)=N-n\nendaligned\nendgather*","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Scapin","category":"page"},{"location":"#Scapin","page":"Home","title":"Scapin","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Scapin.","category":"page"},{"location":"#Theory","page":"Home","title":"Theory","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"theory/nomenclature.md\",\n\t\"theory/continuous_green_operators.md\",\n\t\"theory/discrete_green_operators.md\",\n\t\"theory/appendix.md\"\n]","category":"page"},{"location":"#API-Docs","page":"Home","title":"API Docs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"api.md\"\n]","category":"page"}]
}
